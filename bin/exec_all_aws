#!/usr/bin/env python2
import argparse
import boto.ec2
import os
import subprocess
import yaml
parser = argparse.ArgumentParser(description='Execute a command on EC2')
parser.add_argument('command', help='Command to execute on all EC2.')
args = parser.parse_args()

SCRIPT_ROOT = os.path.dirname(os.path.realpath(__file__))
CONFIG = yaml.load(open(SCRIPT_ROOT + "/config.yml", "r"))
kid = CONFIG['aws']['key_id']
secret = CONFIG['aws']['secret']
conn = boto.ec2.connect_to_region('eu-west-1', aws_access_key_id=kid,
                                  aws_secret_access_key=secret)

reservation = conn.get_all_instances()
conn_strings = {}
failures = []
for r in reservation:
    for i in r.instances:
        if "billing" not in i.tags['Name'].lower() and i.state == "running" \
          and "mongo" not in i.tags['Name'].lower():
            print("Execute '%s' on %s" % (args.command, i.tags['Name']))
            try:
                print(subprocess.check_output(["ssh", i.public_dns_name,
                                               args.command]))
            except Exception:
                failures.append(i)

print("Execution failed on %s" % (", ".join([i.tags["Name"]
                                             for i in failures])))
