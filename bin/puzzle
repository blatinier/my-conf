#!/usr/bin/env python
import random
import sys

from PIL import Image
import Image

# Some configuration vars
try:
    puz_width = int(sys.argv[1])
    puz_height = int(sys.argv[2])
    in_file = sys.argv[3]
except IndexError:
    print "Lancer comme ceci: \n./puzzle.py nb_pce_largeur nb_pce_hauteur image_source"
    sys.exit()
try:
    white_bands_width = int(sys.argv[4])
except IndexError:
    white_bands_width = 4
out_path = in_file.split("/")
out_path[-1] = "puzzle_" + out_path[-1]
out_file = "/".join(out_path)
grid_path = in_file.split("/")
grid_path[-1] = "grid_" + grid_path[-1]
grid_file = "/".join(grid_path)

# Init things
im = Image.open(in_file)
oim = Image.new("RGBA", (im.size[0] + white_bands_width * (puz_width + 1),
                         im.size[1] + white_bands_width * (puz_height + 1)),
                "white")
gim = Image.new("RGBA", (im.size[0] + 1 * (puz_width + 1),
                         im.size[1] + 1 * (puz_height + 1)))
imgwidth, imgheight = im.size
piece_height = int(imgheight / puz_height)
piece_width = int(imgwidth / puz_width)
white_box = Image.new("RGBA", (piece_width, piece_height), "white")

# Crop pieces from input image
crops = []
for i in range(0, puz_height):
    for j in range(0, puz_width):
        box = (j * piece_width, i * piece_height, \
               (j + 1) * piece_width, \
               (i + 1) * piece_height + 1)
        crops.append(im.crop(box))

# Shuffle pieces and put it on final image
random.shuffle(crops)
k = 0
for i in range(0, puz_height):
    for j in range(0, puz_width):
        box = (j * (piece_width + white_bands_width) + white_bands_width,
               i * (piece_height + white_bands_width) + white_bands_width)
        oim.paste(crops[k], box)
        box = (j * (piece_width + 1) + 1,
               i * (piece_height + 1) + 1)
        gim.paste(white_box, box)
        k += 1

# Save it
oim.save(out_file)
gim.save(grid_file)
